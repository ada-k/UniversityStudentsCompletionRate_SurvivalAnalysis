install.packages("ggplot")
install.packages("vcd")
#chi sq test
library(data.table)
file_path<-"http://www.sthda.com/RDoc/data/housetasks.txt"
#housetasks <- fread('http://www.sthda.com/
housetasks <- read.delim(file_path, rownames=1)
housetasks
#housetasks <- fread('http://www.sthda.com/
housetasks <- read.delim(file_path, rownames=1)
file_path<-"http://www.sthda.com/RDoc/data/housetasks.txt"
#housetasks <- fread('http://www.sthda.com/
housetasks <- read.delim(file_path, rownames=1)
#housetasks <- fread('http://www.sthda.com/
housetasks <- read.delim(file_path)
housetasks
View(housetasks)
View(housetasks)
#chi sq test
library(data.table)
file_path<-"http://www.sthda.com/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path)
View(housetasks)
file_path<-"http://www.sthda.com/sthda/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path)
View(housetasks)
install.packages("gplots")
install.packages("vcd")
housetasks <- read.delim(file_path, row.names=1)
View(housetasks)
housetasks
install.packages("gplots")
install.packages("gplots")
library(gplots)
install.packages("gplots")
install.packages("gplots")
install.packages("gplots")
install.packages("gplots")
install.packages("vcd")
install.packages("gplots")
install.packages("vcd")
install.packages("gplots")
install.packages("vcd")
install.packages("gplots")
install.packages("gplots")
install.packages("graphics")
install.packages("graphics")
library("graphics")
mosaicplot(dt, shade=TRUE, las=Z
main="housetasks")
mosaicplot(dt, shade=TRUE, las=2
main="housetasks")
mosaicplot(dt, shade=TRUE, las=2,
main="housetasks")
mosaicplot(housetasks, shade=TRUE, las=2,
main="housetasks")
install.packages(gplots)
install.packages("gplots")
mosaicplot(housetasks, shade=TRUE, las=2,
main="housetasks' mosaic")
mosaicplot(housetasks, shade=TRUE, las=2,
main="housetasks' mosaic plot")
library(vcd)
install.packages("vcd")
install.packages("vcd")
install.packages("vcd")
library(vcd)
library("vcd")
library(vcd)
install.packages("vcd")
install.packages("vcd")
install.packages("lmtest")
install.packages("vcd")
install.packages("lmtest")
install.packages("vcd")
library(vcd)
install.packages("lmtest")
install.packages("gplots")
library(gplots)
library(vcd)
install.packages("vcd")
install.packages("car")
install.packages("lmtest")
install.packages("vcd")
library(vcd)
install.packages("gfortran")
install.packages("car")
install.packages("lmtest")
install.packages("vcd")
library(vcd)
assoc(head(housetasks, 5), shade=TRUE, las=3)
install.packages("libgfortran")
install.packages("libquadmath")
install.packages("lmtest")
#chi sq test
chi_test <- housetasks
chi_test
#chi sq test
chi_test <- (housetasks)
summary(chi_test)
install.packages("vcd")
chi_test
#chi sq test
chi_test <- chisq.test(housetasks)
summary(chi_test)
chi_test
#observed and estimated values
chi_test$observed
round(chi_test$expected, 2)
#pearson residual(r = (O-E)1/root 2) Run and get absolute values to get the most significant.
round(chi_test$residuals)
assoc(head(housetasks, 5), shade=TRUE, las=3)
library(vcd)
library(ISLR)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("ISLR")
library(ISLR)
install.packages("tidyverse")
library(tidyverse)
install.packages("ISLR")
library(ISLR)
install.packages("tidyverse")
library(tidyverse)
install.packages("ISLR")
library(ISLR)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("ISLR")
install.packages("ISLR")
install.packages("islr")
install.packages("ISLR")
library(MASS)
my_data<-Cars93
my_data
data("Cars93")
head(Cars93)
?Cars93
#structure
str(Cars93)
#subsetting to use only variables type and airbags
my_car = data.frame(Cars93$AirBags, Cars93$Type)
#subsetting to use only variables type and airbags
my_car = data.frame(Cars93$AirBags, Cars93$Manufacturer)
#contigency table
my_car1 = table(Cars93$AirBags, Cars93$Type)
#subsetting to use only variables type and airbags
my_car = data.frame(Cars93$AirBags, Cars93$Manufacturer)
#contigency table
my_car1 = table(Cars93$AirBags, Cars93$Manufacturer)
my_car1
#alt
my_car2 <- table(my_car)
my_car2
#visual representation of contingency table
library("graphics")
mosaicplot(my_car2, shade=TRUE, las=2,
main="housetasks' mosaic plot")
#h0: the 2 variables are independent
chi_test <- chisq.test(my_car2)
chi_test
library(MASS)
?MASS
my_data<-Cars93
my_data
data("Cars93")
head(Cars93)
?Cars93
#structure
str(Cars93)
#subsetting to use only variables type and airbags
my_car = data.frame(Cars93$AirBags, Cars93$Type)
#contigency table
my_car1 = table(Cars93$AirBags, Cars93$Type)
my_car1
#alt
my_car2 <- table(my_car)
my_car2
#visual representation of contingency table
library("graphics")
mosaicplot(my_car2, shade=TRUE, las=2,
main="housetasks' mosaic plot")
install.packages("vcd")
library(vcd)
assoc(head(my_car2, 5), shade=TRUE, las=3)
#h0: the 2 variables are independent
chi_test <- chisq.test(my_car2)
chi_test
library(MASS)
?MASS
library(MASS)
my_data<-Cars93
str(Cars93)
library(MASS)
my_data<-Cars93
#subsetting to use only variables Manufacturer and airbags
my_car = data.frame(Cars93$AirBags, Cars93$Manufacturer)
#contigency table
my_car2 <- table(my_car)
my_car2
#subsetting to use only variables Manufacturer and airbags
my_car = data.frame(Cars93$Model, Cars93$Manufacturer)
#contigency table
my_car2 <- table(my_car)
my_car2
#subsetting to use only variables Manufacturer and airbags
my_car = data.frame(Cars93$Origin, Cars93$Make)
#contigency table
my_car2 <- table(my_car)
my_car2
#subsetting to use only variables Manufacturer and airbags
my_car = data.frame(Cars93$Origin, Cars93$DriveTrain)
#contigency table
my_car2 <- table(my_car)
my_car2
#visual representation of contingency table
library("graphics")
mosaicplot(my_car2, shade=TRUE, las=2,
main="housetasks' mosaic plot")
#h0: the 2 variables are independent
chi_test <- chisq.test(my_car2)
chi_test
#contigency table
my_car2 <- table(my_car)
my_car2
library(vcd)
assoc(head(my_car2, 5), shade=TRUE, las=3)
library(vcd)
assoc(head(my_car2, 5), shade=TRUE, las=3)
#h0: the 2 variables are independent
chi_test <- chisq.test(my_car2)
chi_test
#visual representation of contingency table
library("graphics")
mosaicplot(my_car2, shade=TRUE, las=2,
main="mosaic plot")
#visual representation of contingency table
library("graphics")
mosaicplot(my_car2, shade=TRUE, las=2,
main="mosaic plot")
#h0: the 2 variables are independent
chi_test <- chisq.test(my_car2)
chi_test
#visual representation of contingency table
library("graphics")
mosaicplot(my_car2, shade=TRUE, las=2,
main="mosaic plot")
library(vcd)
library(vcd)
assoc(head(my_car2, 5), shade=TRUE, las=3)
library(vcd)
assoc(head(my_car2, 5), shade=TRUE, las=3)
#h0: the 2 variables are independent
chi_test <- chisq.test(my_car2)
chi_test
#visual representation of contingency table
library("graphics")
mosaicplot(my_car2, shade=TRUE, las=2,
main="mosaic plot")
library(vcd)
assoc(head(my_car2, 5), shade=TRUE, las=3)
#h0: the 2 variables are independent
chi_test <- chisq.test(my_car2)
chi_test
#subsetting to use only variables Manufacturer and airbags
my_car = data.frame(Cars93$Manufacturer, Cars93$Origin)
#contigency table
my_car2 <- table(my_car)
my_car2
#visual representation of contingency table
library("graphics")
mosaicplot(my_car2, shade=TRUE, las=2,
main="mosaic plot")
#h0: the 2 variables are independent
chi_test <- chisq.test(my_car2)
chi_test
getwd()
setwd("../survival")
data <- read.table("data.csv")
getwd()
setwd("../survival")
data <- read.table("data.csv")
data <- read.table("data.csv")
getwd()
setwd("/home/ada/hub/UniversityStudentsCompletionRate_SurvivalAnalysis/notebook/")
data <- read.table("data.csv")
# EXPLORATORY DATA ANALYSIS
head(data)
tail(data)
summary(data)
data_copy <- data
#Converting courses, Gender and Reasons into categories
data_copy$Course[data_copy$Course == 1] = "BMCS"
data_copy$Course[data_copy$Course == 2] = "BSSC"
data_copy$Course[data_copy$Course == 3] = "BTRE"
data_copy$Course[data_copy$Course == 4] = "BTAP"
data_copy$Course <- factor(data_copy$Course)
data_copy$Gender[data_copy$Gender == 1] = "M"
data_copy$Gender[data_copy$Gender == 2] = "F"
data_copy$Gender <-factor(data_copy$Gender)
data_copy$Reasons[data_copy$Reasons == 1] = "Academics"
data_copy$Reasons[data_copy$Reasons == 2] = "Health"
data_copy$Reasons[data_copy$Reasons == 3] = "Discipline"
data_copy$Reasons[data_copy$Reasons == 4] = "Finance"
data_copy$Reasons[data_copy$Reasons == 5] = "Graduated"
data_copy$Reasons <-factor(data_copy$Reasons)
tail(data_copy)
#loading librarires
library("survival")
library("survminer")
data$time <- data$Year*12
#Censoring
data$Status <- ifelse(data$"Year">4, 0, 1)
#Kaplan-Meir plots
#Survdiff for Gender
fit <- survfit(Surv(time, Status) ~Gender, data=data)
print(fit)
summary(fit)
summary(fit)$table
d <- data.frame(time = fit$time,
n.risk = fit$n.risk,
n.event = fit$n.event,
n.censor = fit$n.censor,
surv = fit$surv,
upper = fit$upper,
lower = fit$lower
)
d
ggsurvplot(fit, data=data,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_bw(),
palette = c("#E7B800", "#2E9FDF"))
ggsurvplot(fit, data=data,
pval = TRUE,
conf.int = TRUE,
conf.int.style = "step",
xlab = "Time in days",
break.time.by = 10,
ggtheme = theme_light(),
risk.table = "abs_pct",
risk.table.y.text.col = T,
risk.table.y.text = FALSE,
ncensor.plot = TRUE,
surv.median.line = "hv",
legend.labs =
c("Male", "Female"),
palette =
c("#E7B800", "#2E9FDF"))
#Survial Analysis
install.packages(c("survival", "survminer"))
install.packages(c("survival", "survminer"))
getwd()
setwd("/home/ada/hub/UniversityStudentsCompletionRate_SurvivalAnalysis/notebook/")
data <- read.table("data.csv")
# EXPLORATORY DATA ANALYSIS
head(data)
tail(data)
summary(data)
data_copy <- data
#Converting courses, Gender and Reasons into categories
data_copy$Course[data_copy$Course == 1] = "BMCS"
data_copy$Course[data_copy$Course == 2] = "BSSC"
data_copy$Course[data_copy$Course == 3] = "BTRE"
data_copy$Course[data_copy$Course == 4] = "BTAP"
data_copy$Course <- factor(data_copy$Course)
data_copy$Gender[data_copy$Gender == 1] = "M"
data_copy$Gender[data_copy$Gender == 2] = "F"
data_copy$Gender <-factor(data_copy$Gender)
data_copy$Reasons[data_copy$Reasons == 1] = "Academics"
data_copy$Reasons[data_copy$Reasons == 2] = "Health"
data_copy$Reasons[data_copy$Reasons == 3] = "Discipline"
data_copy$Reasons[data_copy$Reasons == 4] = "Finance"
data_copy$Reasons[data_copy$Reasons == 5] = "Graduated"
data_copy$Reasons <-factor(data_copy$Reasons)
tail(data_copy)
#Survial Analysis
install.packages(c("survival", "survminer"))
#loading librarires
library("survival")
library("survminer")
data$time <- data$Year*12
#Censoring
data$Status <- ifelse(data$"Year">4, 0, 1)
#Kaplan-Meir plots
#Survdiff for Gender
fit <- survfit(Surv(time, Status) ~Gender, data=data)
print(fit)
summary(fit)
summary(fit)$table
d <- data.frame(time = fit$time,
n.risk = fit$n.risk,
n.event = fit$n.event,
n.censor = fit$n.censor,
surv = fit$surv,
upper = fit$upper,
lower = fit$lower
)
d
ggsurvplot(fit, data=data,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_bw(),
palette = c("#E7B800", "#2E9FDF"))
ggsurvplot(fit, data=data,
pval = TRUE,
conf.int = TRUE,
conf.int.style = "step",
xlab = "Time in days",
break.time.by = 10,
ggtheme = theme_light(),
risk.table = "abs_pct",
risk.table.y.text.col = T,
risk.table.y.text = FALSE,
ncensor.plot = TRUE,
surv.median.line = "hv",
legend.labs =
c("Male", "Female"),
palette =
c("#E7B800", "#2E9FDF"))
#Survdiff for Courses
fit <- survfit(Surv(time, Status) ~Course, data=data)
print(fit)
summary(fit)
summary(fit)$table
d <- data.frame(time = fit$time,
n.risk = fit$n.risk,
n.event = fit$n.event,
n.censor = fit$n.censor,
surv = fit$surv,
upper = fit$upper,
lower = fit$lower
)
d
ggsurvplot(fit, data=data,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_bw(),
palette = c("#E7B800", "#2E9FDF", "#b6d477", "#d477b9"))
ggsurvplot(fit, data=data,
pval = TRUE,
conf.int = TRUE,
conf.int.style = "step",
xlab = "Time in days",
break.time.by = 10,
ggtheme = theme_light(),
risk.table = "abs_pct",
risk.table.y.text.col = T,
risk.table.y.text = FALSE,
ncensor.plot = TRUE,
surv.median.line = "hv",
legend.labs = c("BMCS", "BSSC", "BTRE", "BTAP"),
palette = c("#E7B800", "#2E9FDF", "#b6d477", "#d477b9"))
#Log-Rank Test
surv_dif <- survdiff(Surv(time, Status) ~Gender, data=data)
surv_dif
View(data)
View(data)
#Log-Rank Test
surv_dif_course <- survdiff(Surv(time, Status) ~Course, data=data)
surv_dif_course
# reason
surv_dif_reason <- survdiff(Surv(time, Reason) ~Course, data=data)
surv_dif_reason
# reason
surv_dif_reason <- survdiff(Surv(time, Reasons) ~Course, data=data)
surv_dif_reason
fit <- survfit( Surv(time, Status) ~ Gender + Course + Reasons,
data = colon )
fit
require("survival")
fit <- survfit( Surv(time, Status) ~ Gender + Course + Reasons,
data = colon )
fit
d_cox <- coxph(Surv(time, status) ~ Gender, data = data)
d_cox
summary(d_cox)
dcox <- coxph(Surv(time, status) ~ Gender, data = data)
dcox
summary(dcox
# coxph (simultaneous evaluation of the 3 factors)
# gender
d.cox <- coxph(formula = Surv(time, Status) ~ Gender, data = data)
res_cox <- coxph(Surv(time, Status) ~ Gender, data = data)
res_cox
c_cox <- coxph(Surv(time, Status) ~ Course, data = data)
c_cox
summary(res_cox)
c_cox <- coxph(Surv(time, Status) ~ Course, data = data)
c_cox
summary(c_cox
# Reasons
g_cox <- coxph(Surv(time, Status) ~ Reasons, data = data)
g_cox
summary(g_co
g_cox <- coxph(Surv(time, Status) ~ Reasons, data = data)
g_cox
g_cox <- coxph(Surv(time, Status) ~ Reasons, data = data)
g_cox
summary(g_cox)
